https://youtu.be/KF6t61yuPCY
<변수>
let
const 절대로 바뀌지 않는 상수 --> 수정 x
(변수 선언시 const 로 선언 후 변경될 여지가 있는 것만 let으로 바꾸기)
1. 변수는 문자와 숫자,$와 _만 사용
2. 첫글자는 숫자가 될 수 없다 ex. let 1stGrade = 'A+'
3. 예약어는 사용할 수 없다. ex. let let = 99;
4. 가급적 상수는 대문자로  const Max = 99;
5. 변수 명은 읽기 쉽고 이해할 수 있게 선언 let a = 1; X let userNumber = 3; O

<자료형>
"" / '' / `` 문자형 
`` -> 문자열 내부에 변수${변수or 표현식 등등}를 표현할때
 숫자형

undefinde / null
undefinde => 값이 할당되지 않음
null = > 존재하지 않은 값
typeof 연산자 -> 해당 문자형이 무엇인지 확인

< alert  / prompt / confirm > 
alert() 메세지를 띄우고 알리기  
prompt() 사용자에게 값을 입력 받을 때 사용 
confirm() 무엇인가를 확인 받을 때 사용 
단점 1. 스크립트 일시 정지 2. 스타일링 X(위치가 모양이 고정)

< 형변환 >
Why. ? -> 형이 다른 것들에 대한 조합을 할 때 맞춰주기 위함
String() -> 문자형
Number() -> 숫자형
Boolean() -> 불린형
typeof 로 해당 문자형이 무엇인지 확인 후 필요한 type으로 형 변환

< 연산자 >
* / > - +    % => 나머지 값을 구할 때 사용
** 거듭제곱 

< 비교 연산자 >
< > <= >= == !=

< 조건문 >
if       를 충족한다면 if 조건
else if  if가 아니면 else if 조건
else     if도 아니고 else if 도아니면 esle 조건문

< 논리 연산자 >
and > or and 가 우선순위가 높다 
|| (or) 여러개 중 하나라도 true 면 true //즉, 모든값이 false 여야 false 반환
or 의 경우 true를 발견하는 즉시 진행 멈춤 // 뒤의 것은 상관없음

&& (and) 모든 값이 true여야 true //하나라도 false 이면 false
and 는 false를 발견한느 즉지 진행 멈춤 // 뒤의 것은 상관없음

!  (not) true 면 false , false면 true // 반대값을 반환

< 반복문 Loop >
           초기값    조건    코드 실행 후 작업
ex. for(let i = 0; i < 10; i++){
      // 반복할 코드  
}
초기값 -> 조건확인 -> 코드 반복 -> 실행 후 작업 -> 조건 -> 코드반복->실행
조건 false 일 경우 빠져나오기 

 < while >
let i = 0;  -> 이 상태는 계속 i 가 0이기 때문에 무한 루프
while (i<10){    -> 
    //코드  console.log(i);
    i++;   ->  i가 계속 증가하는 코드  
}

 < do.. while >    -> 조건문을 아래로 옮길 수 있음 
let i = 0;           적어도 한번은 실행 (이 점이 while 과 다른점)
do{
    //코드
    i++;
} while(i<10)

 < break , continue >  코드 빠져나오기
break 
: 멈추고 빠져나옴
continue
: 멈추고 다음 반복으로 진행 

while(true){
    let answer = confirm('');
    if(!answer){
        break;
    }
}

 < switch >  switch의 경우 break를 만나기 전까지는 모두 실행 함.    
                 동일한 코드 
 swithch(평가){     ---->    if(평가 == A){
    case A:                     //A일때 코드
    //A일때 코드                } else if(평가 ==B){
    case B:                     //B일때 코드 
    //B일때 코드                }
    ...
 }
----> 안에 있는 선택 목록중 선택한 것이 없을 경우 log는 찍히지 않는다
      이 경우 default 값을 주면 된다.



< 함수 선언문 vs 함수 표현식 >

* 함수 선언문 : 어디서든 호출 가능
자바스크립트는 위에서 부터 순차적으로 반환하는 '인터프린ㅌ 언어'


* 함수 표현식 : 코드에 도달하면 생성

< 화살표 함수 arrow function >
let add = function (num1, num2) =>

< Object  >




